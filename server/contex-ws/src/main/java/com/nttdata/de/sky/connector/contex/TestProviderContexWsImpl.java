/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.nttdata.de.sky.connector.contex;

import com.nttdata.de.lib.logging.SkyLogger;
import de.ityx.contex.webservice.schema.ContexRequest;
import de.ityx.contex.webservice.schema.ContexResponse;
import de.ityx.contex.webservice.schema.Entry;
import de.ityx.contex.webservice.service.ContexErrorMessage;
import de.ityx.contex.webservice.service.ContexWs;

import java.util.HashMap;

/**
 * This class was generated by Apache CXF 2.4.3
 * 2011-11-16T17:44:46.496+01:00
 * Generated source version: 2.4.3
 */

@javax.jws.WebService(
		serviceName = "ContexWsService",
		portName = "ContexWsPort",
		targetNamespace = "http://webservice.contex.ityx.de/service",
		wsdlLocation = "classpath:wsdl/contexws/contex-ws.wsdl",
		endpointInterface = "de.ityx.contex.webservice.service.ContexWs")

public class TestProviderContexWsImpl implements ContexWs {

	private static final String SyncObj= "TestProviderContexWsImpl";

	private static TestContexWsListener listener;
	
	public static TestContexWsListener getListener() {
		return listener;
	}
	
	public static void setListener(TestContexWsListener aListener) {
		listener = aListener;
	}
	
	/* (non-Javadoc)
	 * @see de.ityx.contex.webservice.service.ContexWs#runProcess(de.ityx.contex.webservice.schema.ContexRequest  request )*
	 */
	public ContexResponse runProcess(ContexRequest request) throws ContexErrorMessage {
		SkyLogger.getTestLogger().info("Executing operation runProcess with request " + request);
		try {
			SkyLogger.getTestLogger().debug("Client wants to run process " + request.getProcessName() + " on master " + request.getMaster());

			ContexResponse _return = new ContexResponse();

			HashMap<String, String> parameterMap = new HashMap<>();
			for (Entry e : request.getEntries()) {
				Entry eOut = new Entry();
				eOut.setKey(e.getKey());
				eOut.setValue(e.getValue());
				_return.getReturn().add(eOut);

				parameterMap.put(e.getKey(), e.getValue());
				SkyLogger.getTestLogger().debug("> Parameter " + e.getKey() + ": " + e.getValue());
			}

			Entry e = new Entry();
			e.setKey("resultFromDummy");
			e.setValue("ok-2");
			_return.getReturn().add(e);

			e = new Entry();
			e.setKey("Provider");
			e.setValue("TestProvider. This is not Contex!");
			_return.getReturn().add(e);

			HashMap<String, String> outMap = new HashMap<>();
			for (Entry outEntry : _return.getReturn()) {
				outMap.put(outEntry.getKey(), outEntry.getValue());
			}

			if (listener != null) {
				synchronized (SyncObj) {
					listener.methodInvoked(request.getMaster(), request.getProcessName(), parameterMap, outMap);
					listener.notify();
				}

			}

			return _return;
		} catch (java.lang.Exception ex) {
			SkyLogger.getTestLogger().error("Exception occured", ex);
			throw new RuntimeException(ex);
		}
		//throw new ContexErrorMessage("ContexErrorMessage...");
	}

}
