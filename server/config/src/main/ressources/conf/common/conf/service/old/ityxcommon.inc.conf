#
# Enable only if you encounter problems with the way the processes
# are handled
# 
#wrapper.debug=true
#

#
# Default Memory Options
#
wrapper.java.initmemory=32
wrapper.java.maxmemory=1490

# 
# Java Executable
#
wrapper.java.command=C:\Program Files\Java\jdk1.6.0_29\bin\java

#
# License Definition
#

wrapper.license.type=DEV
wrapper.license.id=201103100024
wrapper.license.licensee=ITyX Solutions AG
wrapper.license.dev_application=Mediatrix 2.0 Common Server Runtime
wrapper.license.features=64bit
wrapper.license.upgrade_term.begin_date=2008-07-13
wrapper.license.upgrade_term.end_date=2009-07-13
wrapper.license.key.1=58ec-2ec6-2a59-cc16
wrapper.license.key.2=cf6a-a19a-3b67-4870
wrapper.license.key.3=2fb3-bdf3-2564-7230
wrapper.license.key.4=a2cc-7134-42d8-6ba7


# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
#
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
#
wrapper.java.classpath.1=../../../bin/service/win/wrapper.jar
wrapper.java.classpath.2=../../../libs/startup.jar
wrapper.java.classpath.3=../../../libs/common/jai_imageio.jar
wrapper.java.classpath.4=../../../libs/common/mail.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../../../bin
wrapper.java.library.path.2=../../../ocr/tesseract
wrapper.java.library.path.3=../../../bin/service/win
wrapper.java.library.path.4=../../../bin/service/win64
wrapper.java.library.path.5=../../../bin/service/linux
wrapper.java.library.path.6=../../../bin/service/linux64


set.MEDIATRIX_HOME=C:/mediatrix
set.MXENVTYPE=production
set.MYIP=192.168.50.194
set.MXWFLSERVICEIP=192.168.50.192

# Java Additional Parameters
wrapper.java.additional.1=-Duser.home=%MEDIATRIX_HOME%/conf/server
wrapper.java.additional.2=-Dde.ityx.contex.config=%MEDIATRIX_HOME%/conf/server
wrapper.java.additional.3=-Djava.security.policy=%MEDIATRIX_HOME%/bin/service/rmi.policy
wrapper.java.additional.4=-Djava.security.manager
wrapper.java.additional.5=-Djava.rmi.server.hostname=%MYIP%
wrapper.java.additional.6=-Djava.io.tmpdir=%MEDIATRIX_HOME%/tmp
wrapper.java.additional.7=-Dde.ityx.contexdesigner.infohandler=database
wrapper.java.additional.8=-Dcontexdesigner.typesystem==%MEDIATRIX_HOME%/conf/server/typeSystem.tpx 
wrapper.java.additional.9=-Dcom.sun.management.jmxremote
wrapper.java.additional.10=-Dcom.sun.management.jmxremote.port=%JMXPORT%
wrapper.java.additional.11=-Dcom.sun.management.jmxremote.ssl=false
wrapper.java.additional.12=-Dcom.sun.management.jmxremote.authenticate=false
wrapper.java.additional.13=-Djava.net.preferIPv4Stack=true
wrapper.java.additional.14=-Djava.net.preferIPv6Stack=false
wrapper.java.additional.15=-server
wrapper.java.additional.16=-Ddesigner.service.host=%MXWFLSERVICEIP%
wrapper.java.additional.17=-Dservice.debug=1
wrapper.java.additional.18=-XX:MaxPermSize=256m
wrapper.java.additional.19=-Dsky_logging=%MEDIATRIX_HOME%/conf/server/log4j_sky.xml
wrapper.java.additional.20=-Dityx_environment_type=%MXENVTYPE%
wrapper.java.additional.21=-Doracle.jdbc.ReadTimeout=1800000
wrapper.java.additional.22=-Dcom.nttdata.dms.serviceID=1


#********************************************************************
# Wrapper Logging Properties
#********************************************************************
wrapper.console.format=PM
wrapper.console.loglevel=INFO
wrapper.logfile.format=LPTM
wrapper.logfile.loglevel=INFO
wrapper.logfile.maxsize=20m
#for contextserver loop issue
#wrapper.logfile.maxfiles=200
wrapper.logfile.maxfiles=5
wrapper.logfile=../../../logs/%SERVICE%.log
wrapper.syslog.loglevel=NONE


wrapper.console.title=%FULLSERVICE%
wrapper.ntservice.name=%SERVICE%
wrapper.ntservice.displayname=%FULLSERVICE%
wrapper.ntservice.description=%FULLSERVICE%

#wrapper.ntservice.password.prompt=TRUE

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

wrapper.ping.interval.logged=80000
